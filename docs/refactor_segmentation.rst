Какие рычажки подкручивать, если что
==========================================================

Регуляция обуения
------------------------

Обучение модели проводится циклами (эпохами). Каждая эпоха состоит из непосредственно обучения и тестирования (выводы у них будут разные, так что отслеживать их можно без проблем). Количество эпох непосредственно влияет на качество обучения - чем боьлше, тем лучше. Однако! После определенного порога наступает переобучение - то есть результаты ухудшаются.
Для стандартного датасета в 1000 кадров 10 эпох являются более чем достаточными.

Количество эпох настраивается в блоке **#13** - в нем же происходит непосредственно обучения:
::

    num_epochs = 10

Тестировка проводится на определенном количестве кадров. Как правило, количество устанавливается в 0.2-0.3 от размера исходного датасета. Можно и больше, но эффект будет уменьшаться в геометрической прогрессии, время работы увеличивается линейно, а еще и возрастает вероятность переобучения. Так что не надо.

Кол-во кадров на тест задается в блоке **#10**:
::

    test_size = 100

Регулция разметки
-------------------

Алгоритм отбирает для итогового датвсета только те кадры, на которых маркер определен с вероятностю достоверности больше определенного N (0<N<1). По умолчанию в представленном коде N = 0.7, но если есть необходимость, параметр можно "подкрутить". Разумеется, чем ниже вероятность, тем больше отобранных кадров, и тем больше неправильно (или частично неправильно) размеренных кадров.

Вероятность настраивается в блоке **#24**:
::

    def get_mask(base_img, return_bbox=False, except_points=[]):
    ...

        if is_ok and prediction[0]['scores'][i] > **0.7**:
          bboxList.append(prediction[0]['boxes'][i].detach().cpu().numpy())
          maskList.append(prediction[0]['masks'][i, 0].mul(255).byte().cpu().numpy())

